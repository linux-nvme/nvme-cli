'\" t
.\"     Title: nvme-fw-activate
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 08/12/2015
.\"    Manual: NVMe Manual
.\"    Source: NVMe
.\"  Language: English
.\"
.TH "NVME\-FW\-ACTIVATE" "1" "08/12/2015" "NVMe" "NVMe Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
nvme-fw-activate \- Verify downloaded firmware image and commit to specific firmware slot
.SH "SYNOPSIS"
.sp
.nf
\fInvme fw\-activate\fR <device> [ \-\-slot=<slot> | \-s <slot> ] [ \-\-action=<action> | \-a <action> ]
.fi
.SH "DESCRIPTION"
.sp
For the NVMe device given, send an NVMe Firmware Activate admin command and provides the results\&.
.sp
The Firmware Activate command is used to verify that a valid firmware image has been downloaded and to commit that revision to a specific firmware slot\&. The host may select the firmware image to activate on the next controller reset (CC\&.EN transitions from \(oq1\(cq to \(oq0\(cq, a PCI function level reset, and/or other Controller or NVM Subsystem Reset) as part of this command\&. The currently executing firmware revision may be determined from the Firmware Revision field of the Identify Controller data structure as indicated in the Firmware Slot Information log page\&.
.sp
No further action is automatically taken to reset the device, which is usually required to complete the activation process\&. If your kernel and NVMe driver are recent enough, you can activate the firmware by issuing a reset through Linux sysfs, for example:
.sp
.if n \{\
.RS 4
.\}
.nf
 # echo 1 > /sys/class/misc/nvme0/device/reset
.fi
.if n \{\
.RE
.\}
.sp
If your kernel is not recent enough, you will need to remove and add the device some other way\&.
.SH "OPTIONS"
.PP
\-a <action>, \-\-action=<action>
.RS 4
Activate Action: This field specifies the action that is taken on the image downloaded with the Firmware Image Download command or on a previously downloaded and placed image\&.
.TS
allbox tab(:);
lt lt
lt lt
lt lt
lt lt
lt lt.
T{
Value
T}:T{
Definition
T}
T{
0
T}:T{
Downloaded image replaces the image indicated by the Firmware Slot field\&. This image is not activated\&.
T}
T{
1
T}:T{
Downloaded image replaces the image indicated by the Firmware Slot field\&. This image is activated at the next reset\&.
T}
T{
2
T}:T{
The image indicated by the Firmware Slot field is activated at the next reset\&.
T}
T{
3
T}:T{
Reserved\&.
T}
.TE
.sp 1
.RE
.PP
\-s <slot>, \-\-slot=<slot>
.RS 4
Firmware Slot: Specifies the firmware slot that shall be used for the Activate Action, if applicable\&. If the value specified is 0h, then the controller shall choose the firmware slot (slot 1 \(en 7) to use for the operation\&.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Activate the last downloaded fw to slot 1\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# nvme fw\-activate /dev/nvme0 \-\-slot=1 \-\-action=2
.fi
.if n \{\
.RE
.\}
.RE
.SH "NVME"
.sp
Part of the nvme\-user suite
