'\" t
.\"     Title: nvme-resv-report
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 04/24/2020
.\"    Manual: NVMe Manual
.\"    Source: NVMe
.\"  Language: English
.\"
.TH "NVME\-RESV\-REPORT" "1" "04/24/2020" "NVMe" "NVMe Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
nvme-resv-report \- Send NVMe Reservation Report, parse the result
.SH "SYNOPSIS"
.sp
.nf
\fInvme resv\-report\fR <device> [\-\-namespace\-id=<nsid> | \-n <nsid>]
                        [\-\-numd=<num\-dwords> | \-d <num\-dwords>]
                        [\-\-cdw11=<cdw11> | \-c <cdw11>]
                        [\-\-raw\-binary | \-b]
                        [\-\-output\-format=<fmt> | \-o <fmt>]
.fi
.SH "DESCRIPTION"
.sp
The Reservation Report command returns a Reservation Status data structure to host memory that describes the registration and reservation status of a namespace\&.
.sp
The size of the Reservation Status data structure is a function of the number of controllers in the NVM Subsystem that are associated with hosts that are registrants of the namespace (i\&.e\&., there is a Registered Controller data structure for each such controller)\&.
.SH "OPTIONS"
.PP
\-n <nsid>, \-\-namespace\-id=<nsid>
.RS 4
Retrieve the reservation report structure for the given nsid\&. This is required for the character devices, or overrides the block nsid if given\&.
.RE
.PP
\-d <num\-dwords>, \-\-numd=<num\-dwords>
.RS 4
Specify the number of Dwords of the Reservation Status structure to transfer\&. Defaults to 4k\&.
.RE
.PP
\-c <cdw11>, \-\-cdw11=<cdw11>
.RS 4
The value for command dword 11\&. Setting bit 0 specifies that the controller returns the Extended Data Structure\&.
.RE
.PP
\-b, \-\-raw\-binary
.RS 4
Print the raw buffer to stdout\&. Structure is not parsed by program\&.
.RE
.PP
\-o <format>, \-\-output\-format=<format>
.RS 4
Set the reporting format to
\fInormal\fR,
\fIjson\fR, or
\fIbinary\fR\&. Only one output format can be used at a time\&.
.RE
.SH "EXAMPLES"
.sp
No examples yet\&.
.SH "NVME"
.sp
Part of the nvme\-user suite
