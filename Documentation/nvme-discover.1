'\" t
.\"     Title: nvme-discover
.\"    Author: [see the "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 04/24/2020
.\"    Manual: NVMe Manual
.\"    Source: NVMe
.\"  Language: English
.\"
.TH "NVME\-DISCOVER" "1" "04/24/2020" "NVMe" "NVMe Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
nvme-discover \- Send Get Log Page request to Discovery Controller\&.
.SH "SYNOPSIS"
.sp
.nf
\fInvme discover\fR
                [\-\-transport=<trtype>     | \-t <trtype>]
                [\-\-traddr=<traddr>        | \-a <traddr>]
                [\-\-trsvcid=<trsvcid>      | \-s <trsvcid>]
                [\-\-host\-traddr=<traddr>   | \-w <traddr>]
                [\-\-hostnqn=<hostnqn>      | \-q <hostnqn>]
                [\-\-hostid=<hostid>        | \-I <hostid>]
                [\-\-raw=<filename>         | \-r <filename>]
                [\-\-keep\-alive\-tmo=<sec>   | \-k <sec>]
                [\-\-reconnect\-delay=<#>    | \-c <#>]
                [\-\-ctrl\-loss\-tmo=<#>      | \-l <#>]
                [\-\-hdr_digest             | \-g]
                [\-\-data_digest            | \-G]
                [\-\-nr\-io\-queues=<#>       | \-i <#>]
                [\-\-nr\-write\-queues=<#>    | \-W <#>]
                [\-\-nr\-poll\-queues=<#>     | \-P <#>]
                [\-\-queue\-size=<#>         | \-Q <#>]
                [\-\-persistent             | \-p]
                [\-\-quiet                  | \-S]
.fi
.SH "DESCRIPTION"
.sp
Send one or more Get Log Page requests to a NVMe\-over\-Fabrics Discovery Controller\&.
.sp
If no parameters are given, then \fInvme discover\fR will attempt to find a /etc/nvme/discovery\&.conf file to use to supply a list of Discovery commands to run\&. If no /etc/nvme/discovery\&.conf file exists, the command will quit with an error\&.
.sp
Otherwise, a specific Discovery Controller should be specified using the \-\-transport, \-\-traddr, and if necessary the \-\-trsvcid flags\&. A Di—ïcovery request will then be sent to the specified Discovery Controller\&.
.SH "BACKGROUND"
.sp
The NVMe\-over\-Fabrics specification defines the concept of a Discovery Controller that an NVMe Host can query on a fabric network to discover NVMe subsystems contained in NVMe Targets which it can connect to on the network\&. The Discovery Controller will return Discovery Log Pages that provide the NVMe Host with specific information (such as network address and unique subsystem NQN) the NVMe Host can use to issue an NVMe connect command to connect itself to a storage resource contained in that NVMe subsystem on the NVMe Target\&.
.sp
Note that the base NVMe specification defines the NQN (NVMe Qualified Name) format which an NVMe endpoint (device, subsystem, etc) must follow to guarantee a unique name under the NVMe standard\&. In particular, the Host NQN uniquely identifies the NVMe Host, and may be used by the the Discovery Controller to control what NVMe Target resources are allocated to the NVMe Host for a connection\&.
.sp
A Discovery Controller has it\(cqs own NQN defined in the NVMe\-over\-Fabrics specification, \fBnqn\&.2014\-08\&.org\&.nvmexpress\&.discovery\fR\&. All Discovery Controllers must use this NQN name\&. This NQN is used by default by nvme\-cli for the \fIdiscover\fR command\&.
.SH "OPTIONS"
.PP
\-t <trtype>, \-\-transport=<trtype>
.RS 4
This field specifies the network fabric being used for a NVMe\-over\-Fabrics network\&. Current string values include:
.TS
allbox tab(:);
lt lt
lt lt
lt lt
lt lt.
T{
Value
T}:T{
Definition
T}
T{
rdma
T}:T{
The network fabric is an rdma network (RoCE, iWARP, Infiniband, basic rdma, etc)
T}
T{
fc
T}:T{
\fBWIP\fR
The network fabric is a Fibre Channel network\&.
T}
T{
loop
T}:T{
Connect to a NVMe over Fabrics target on the local host
T}
.TE
.sp 1
.RE
.PP
\-a <traddr>, \-\-traddr=<traddr>
.RS 4
This field specifies the network address of the Discovery Controller\&. For transports using IP addressing (e\&.g\&. rdma) this should be an IP\-based (ex\&. IPv4) address\&.
.RE
.PP
\-s <trsvcid>, \-\-trsvcid=<trsvcid>
.RS 4
This field specifies the transport service id\&. For transports using IP addressing (e\&.g\&. rdma) this field is the port number\&. By default, the IP port number for the RDMA transport is 4420\&.
.RE
.PP
\-w <traddr>, \-\-host\-traddr=<traddr>
.RS 4
This field specifies the network address used on the host to connect to the Discovery Controller\&.
.RE
.PP
\-q <hostnqn>, \-\-hostnqn=<hostnqn>
.RS 4
Overrides the default host NQN that identifies the NVMe Host\&. If this option is not specified, the default is read from /etc/nvme/hostnqn first\&. If that does not exist, the autogenerated NQN value from the NVMe Host kernel module is used next\&.
.RE
.PP
\-I <hostid>, \-\-hostid=<hostid>
.RS 4
UUID(Universally Unique Identifier) to be discovered which should be formatted\&.
.RE
.PP
\-r <filename>, \-\-raw=<filename>
.RS 4
This field will take the output of the
\fInvme discover\fR
command and dump it to a raw binary file\&. By default
\fInvme discover\fR
will dump the output to stdout\&.
.RE
.PP
\-k <#>, \-\-keep\-alive\-tmo=<#>
.RS 4
Overrides the default dealy (in seconds) for keep alive\&. This option will be ignored for the discovery, and it is only implemented for completeness\&.
.RE
.PP
\-c <#>, \-\-reconnect\-delay=<#>
.RS 4
Overrides the default delay (in seconds) before reconnect is attempted after a connect loss\&.
.RE
.PP
\-l <#>, \-\-ctrl\-loss\-tmo=<#>
.RS 4
Overrides the default controller loss timeout period (in seconds)\&.
.RE
.PP
\-g, \-\-hdr_digest
.RS 4
Generates/verifies header digest (TCP)\&.
.RE
.PP
\-G, \-\-data_digest
.RS 4
Generates/verifies data digest (TCP)\&.
.RE
.PP
\-i <#>, \-\-nr\-io\-queues=<#>
.RS 4
Overrides the default number of I/O queues create by the driver\&. This option will be ignored for the discovery, and it is only implemented for completeness\&.
.RE
.PP
\-W <#>, \-\-nr\-write\-queues=<#>
.RS 4
Adds additional queues that will be used for write I/O\&.
.RE
.PP
\-P <#>, \-\-nr\-poll\-queues=<#>
.RS 4
Adds additional queues that will be used for polling latency sensitive I/O\&.
.RE
.PP
\-Q <#>, \-\-queue\-size=<#>
.RS 4
Overrides the default number of elements in the I/O queues created by the driver which can be found at drivers/nvme/host/fabrics\&.h\&. This option will be ignored for the discovery, and it is only implemented for completeness\&.
.RE
.PP
\-p, \-\-persistent
.RS 4
Persistent discovery connection\&.
.RE
.PP
\-S, \-\-quiet
.RS 4
Suppress already connected errors\&.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Query the Discover Controller with IP4 address 192\&.168\&.1\&.3 for all resources allocated for NVMe Host name host1\-rogue\-nqn on the RDMA network\&. Port 4420 is used by default:
.sp
.if n \{\
.RS 4
.\}
.nf
# nvme discover \-\-transport=rdma \-\-traddr=192\&.168\&.1\&.3 \e
\-\-hostnqn=host1\-rogue\-nqn
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Issue a
\fInvme discover\fR
command using a /etc/nvme/discovery\&.conf file:
.sp
.if n \{\
.RS 4
.\}
.nf
# Machine default \*(Aqnvme discover\*(Aq commands\&.  Query the
# Discovery Controller\*(Aqs two ports (some resources may only
# be accessible on a single port)\&.  Note an official
# nqn (Host) name defined in the NVMe specification is being used
# in this example\&.
\-t rdma \-a 192\&.168\&.69\&.33 \-s 4420 \-q nqn\&.2014\-08\&.com\&.example:nvme:nvm\-subsystem\-sn\-d78432
\-t rdma \-a 192\&.168\&.1\&.4   \-s 4420 \-q nqn\&.2014\-08\&.com\&.example:nvme:nvm\-subsystem\-sn\-d78432

At the prompt type "nvme discover"\&.
.fi
.if n \{\
.RE
.\}
.RE
.SH "SEE ALSO"
.sp
nvme\-connect(1) nvme\-connect\-all(1)
.SH "AUTHORS"
.sp
This was written by \m[blue]\fBJay Freyensee\fR\m[]\&\s-2\u[1]\d\s+2
.SH "NVME"
.sp
Part of the nvme\-user suite
.SH "NOTES"
.IP " 1." 4
Jay Freyensee
.RS 4
\%mailto:james.p.freyensee@intel.com
.RE
