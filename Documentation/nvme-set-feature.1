'\" t
.\"     Title: nvme-set-feature
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 10/20/2020
.\"    Manual: NVMe Manual
.\"    Source: NVMe
.\"  Language: English
.\"
.TH "NVME\-SET\-FEATURE" "1" "10/20/2020" "NVMe" "NVMe Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
nvme-set-feature \- Sets an NVMe feature, returns applicable results
.SH "SYNOPSIS"
.sp
.nf
\fInvme set\-feature\fR <device> [\-\-namespace\-id=<nsid> | \-n <nsid>]
                          [\-\-feature\-id=<fid> | \-f <fid>] [\-\-value=<value> | \-v <value>]
                          [\-\-data\-len=<data\-len> | \-l <data\-len>]
                          [\-\-data=<data\-file> | \-d <data\-file>]
                          [\-\-save| \-s]
.fi
.SH "DESCRIPTION"
.sp
Submits an NVMe Set Feature admin command and returns the applicable results\&. This may be the feature\(cqs value, or may also include a feature structure if the feature requires it (ex: LBA Range Type)\&.
.sp
The <device> parameter is mandatory and may be either the NVMe character device (ex: /dev/nvme0), or a namespace block device (ex: /dev/nvme0n1)\&.
.sp
On success, the value sent to the device is displayed
.SH "OPTIONS"
.PP
\-n <nsid>, \-\-namespace\-id=<nsid>
.RS 4
Sets the feature for the given nsid\&. This is optional and most features do not use this value\&.
.RE
.PP
\-f <fid>, \-\-feature\-id=<fid>
.RS 4
The feature id to send with the command\&. Value provided should be in hex\&.
.RE
.PP
\-l <data\-len>, \-\-data\-len=<data\-len>
.RS 4
The data length for the buffer submitted for this feature\&. Most known features do not use this value\&. The exceptions are LBA Range Type and host identifier\&.
.RE
.PP
\-d <data\-file>, \-\-data=<data\-file>
.RS 4
The data file for the buffer submitted for this feature\&. Most known features do not use this value\&. The exceptions is LBA Range Type and host identifier\&. This defaults to STDIN so files and echo can be piped\&.
.RE
.PP
\-v <value>, \-\-value=<value>
.RS 4
The value for command dword 11, the value you want to set the feature to\&.
.RE
.PP
\-s, \-\-save
.RS 4
Save the attribute so that it persists through all power states and resets\&.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Sets the Power State (PS) to 1 in feature id 2:
.sp
.if n \{\
.RS 4
.\}
.nf
# nvme set\-feature /dev/nvme0 \-f 2 /dev/nvme0n1 \-v 0x1
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Sets the host id to the ascii string\&.
.sp
.if n \{\
.RS 4
.\}
.nf
# echo "abcdefgh" | nvme set\-feature /dev/nvme0 \-f 0x81 \-l 8
.fi
.if n \{\
.RE
.\}
.RE
.SH "NVME"
.sp
Part of the nvme\-user suite
