nvme-id-nvmset(1)
=================

NAME
----
nvme-id-nvmset - Send NVMe Identify NVM Set List, return result and structure

SYNOPSIS
--------
[verse]
'nvme id-nvmset' <device> [-i <id> | --nvmset_id=<id> ]
			[-o <fmt> | --output-format=<fmt>]

DESCRIPTION
-----------
For the NVMe device given, sends an identify NVM set list command and
provides the result and returned structure.

The <device> parameter is mandatory and may be either the NVMe character
device (ex: /dev/nvme0), or a namespace block device (ex: /dev/nvme0n1).

On success, the structure may be returned in one of several ways depending
on the option flags; the structure may be parsed by the program or the
raw buffer may be printed to stdout.

OPTIONS
-------
-i <id>::
--nvmset_id=<id>::
	This field specifies the identifier of the NVM Set.  If given, NVM set
	identifier whose entry is to be in result data will be greater than or
	equal to this value.

-o <format>::
--output-format=<format>::
              Set the reporting format to 'normal', 'json', or
              'binary'. Only one output format can be used at a time.

EXAMPLES
--------
* Has the program interpret the returned buffer and display the known
fields in a human readable format:
+
------------
# nvme id-nvmset /dev/nvme0
------------
+

* Have the program return the raw structure in binary:
+
------------
# nvme id-nvmset /dev/nvme0 --output-format=binary > id_nvmset.raw
# nvme id-nvmset /dev/nvme0 -o binary > id_nvmset.raw
------------
+
It is probably a bad idea to not redirect stdout when using this mode.

* Alternatively you may want to send the data to another program that
can parse the raw buffer.
+
------------
# nvme id-nvmset /dev/nvme0 -o binary | nvme_parse_id_nvmset
------------
+
The parse program in the above example can be a program that shows the
structure in a way you like. The following program is such an example
that will parse it and can accept the output through a pipe, `'|'`,
as shown in the above example, or you can `'cat'` a saved output buffer to it.
------------

NVME
----
Part of the nvme-user suite
