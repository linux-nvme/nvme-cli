'\" t
.\"     Title: nvme-zns-zone-mgmt-recv
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 10/20/2020
.\"    Manual: NVMe Manual
.\"    Source: NVMe
.\"  Language: English
.\"
.TH "NVME\-ZNS\-ZONE\-MGM" "1" "10/20/2020" "NVMe" "NVMe Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
nvme-zns-zone-mgmt-recv \- Zone Management Receive command
.SH "SYNOPSIS"
.sp
.nf
\fInvme zns zone\-mgmt\-recv\fR <device> [\-\-namespace\-id=<NUM> | \-n <NUM>]
                                   [\-\-start\-lba=<LBA> | \-s <LBA>]
                                   [\-\-data\-len=<IONUM>, \-l <IONUM>]
                                   [\-\-zra=<NUM>, \-z <NUM>]
                                   [\-\-zrasf=<NUM>, \-a <NUM>]
                                   [\-\-zra\-spec\-feat, \-f]
                                   [\-\-output\-format=<FMT>, \-o <FMT>]
.fi
.SH "DESCRIPTION"
.sp
For the NVMe device given, issues the Zone Management Receive command with the requested receive action and additional action specific parameters\&. This is the generic interface provided for forward compatibility as new actions are created that this program isn\(cqt aware of at the time of its development\&. As such, this is a generic command that does not do any additional decoding for specific types of data received\&. This will only report the data as a hex dump, or binary\&.
.SH "OPTIONS"
.PP
\-n <NUM>, \-\-namespace\-id=<NUM>
.RS 4
Use the provided namespace id for the command\&. If not provided, the namespace id of the block device will be used\&. If the command is issued to a non\-block device, the parameter is required\&.
.RE
.PP
\-s <lba>, \-\-start\-lba=<lba>
.RS 4
The starting LBA of the zone to manage receive\&.
.RE
.sp
\-\-data\-len=<NUM> \-l <NUM> Received data buffer length
.PP
\-z <NUM>, \-\-zra=<NUM>
.RS 4
Zone Receive Action
.RE
.sp
\-a <NUM> \-\-zrasf=<NUM> Zone Receive Action Specific field
.PP
\-f, \-\-zra\-spec\-feat
.RS 4
Enable Zone Receive Action Specific features
.RE
.PP
\-o <FMT>, \-\-output\-format=<FMT>
.RS 4
Output format: normal|json|binary
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Hex dump of a report all zones
.sp
.if n \{\
.RS 4
.\}
.nf
# nvme zns zone\-mgmt\-recv /dev/nvme0 \-n 1 \-s 0 \-z 0 \-a 0 \-l 4k
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Binary dump of a report all zones
.sp
.if n \{\
.RS 4
.\}
.nf
# nvme zns zone\-mgmt\-recv /dev/nvme0 \-n 1 \-s 0 \-z 0 \-a 0 \-o \-l 4k binary > report\&.out
.fi
.if n \{\
.RE
.\}
.RE
.SH "NVME"
.sp
Part of nvme\-cli
