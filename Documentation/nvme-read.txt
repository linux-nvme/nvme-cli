nvme-read(1)
============

NAME
----
nvme-read - Send an NVMe Read command, provide results

SYNOPSIS
--------
[verse]
'nvme-read' <device> [--start-block=<slba> | -s <slba>]
			[--block-count=<nlb> | -c <nlb>]
			[--data-size=<size> | -z <size>]
			[--metadata-size=<size> | -y <size>]
			[--ref-tag=<reftag> | -r <reftag>]
			[--data=<data-file> | -d <data-file>]
			[--metadata=<metadata-file> | -M <metadata-file>]
			[--prinfo=<prinfo> | -p <prinfo>]
			[--app-tag-mask=<appmask> | -m <appmask>]
			[--app-tag=<apptag> | -a <apptag>]
			[--limited-retry | -l]
			[--latency | -t]
			[--force-unit-access | -f]

DESCRIPTION
-----------
The Read command reads the logical blocks specified by the command from
the medium and copies to the data data buffer provided. Will use stdout
by default if you don't provide a file.

OPTIONS
-------
--start-block=<slba>::
-s <slba>::
	Start block.

--block-count::
-c::
	The number of blocks to transfer. This is a zeroes based value to
	align with the kernel's use of this field. (ie. 0 means transfer
	1 block).

--block-amount=<nlb>::
-a <nlb>::
	Amount uumber of logical blocks to read.

--data-size=<size>::
-z <size>::
	Size of data, in bytes.

--metadata-size=<size>::
-y <size>::
	Size of metadata in bytes.

--data=<data-file>::
-d <data-file>::
	Data file. If none provided, contents are sent to STDOUT.

--metadata=<metadata-file>::
-M <metadata-file>::
	Metadata file, if necessary.

--prinfo=<prinfo>::
-p <prinfo>::
	Protection Information field defintion.
+
[]
|=================
|Bit|Description
|3|PRACT: Protection Information Action. When set to 1, PI is stripped/inserted
on read/write when the block format's metadata size is 8. When set to 0,
metadata is passes.
|2:0|PRCHK: Protection Information Check:
|2|Set to 1 enables checking the guard tag
|1|Set to 1 enables checking the application tag
|0|Set to 1 enables checking the reference tag
|=================

--ref-tag=<reftag>::
-r <reftag>::
	Optional reftag when used with protection information.

--app-tag-mask=<appmask>::
-m <appmask>::
	Optional application tag mask when used with protection information.

--force-unit-access::
-f::
	Set the force-unit access flag.

--latency::
-t::
	Print out the latency the IOCTL took (in us).

EXAMPLES
--------
No examples yet.

NVME
----
Part of the nvme-user suite
