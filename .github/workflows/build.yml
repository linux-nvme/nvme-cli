---
name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  default:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
        buildtype: [debug, release]
    container:
      image: ghcr.io/igaw/linux-nvme/debian:0.30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: build
        run: |
          scripts/build.sh -b ${{ matrix.buildtype }} -c ${{ matrix.compiler }}
      - uses: actions/upload-artifact@v3
        name: upload logs
        if: failure()
        with:
          name: logs files
          path: |
            .build-ci/meson-logs/*.txt

  cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: armhf
            port: armhf
            compiler: gcc-arm-linux-gnueabihf
            packages:
          - arch: s390x
            port: s390x
            compiler: gcc-s390x-linux-gnu
            packages: libgcc-s1:s390x
          - arch: ppc64le
            port: ppc64el
            compiler: gcc-powerpc64le-linux-gnu
            packges:
    steps:
      - uses: actions/checkout@v3
      - name: set up arm architecture
        run: |
          export release=$(lsb_release -c -s)
          sudo dpkg --add-architecture ${{ matrix.port }}
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo dd of=/etc/apt/sources.list.d/${{ matrix.arch }}.list <<EOF
          deb [arch=${{ matrix.port }}] http://ports.ubuntu.com/ $release main universe restricted"
          deb [arch=${{ matrix.port }}] http://ports.ubuntu.com/ $release-updates main universe restricted"
          EOF
          sudo apt update
          sudo apt install -y meson pkg-config qemu-user-static ${{ matrix.compiler}} libjson-c-dev:${{ matrix.port }} ${{ matrix.packages }}
      - name: build
        run: |
          scripts/build.sh -b release -c gcc -t ${{ matrix.arch }} cross
      - uses: actions/upload-artifact@v3
        name: upload logs
        if: failure()
        with:
          name: log files
          path: |
            .build-ci/meson-logs/*.txt

  fallback-shared-libraries:
    name: fallback shared libraries
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/igaw/linux-nvme/debian:0.30
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: build
        run: |
          scripts/build.sh -b release -c gcc fallback
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: log files
          path: |
            .build-ci/meson-logs/*.txt

  build-muon:
    name: muon minimal static
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/igaw/linux-nvme/debian:0.30
    steps:
      - uses: actions/checkout@v3
      - name: build
        run: |
          scripts/build.sh -m muon
