---
name: appimage

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  DESTDIR: ../AppDir

jobs:
  build-appimage:
    name: build AppImage
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/igaw/linux-nvme/debian:latest
    steps:
     - uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - name: fixup permissions
       env:
         GITHUB_WORKSPACE: ${{ github.workspace }}
       run: |
         git config --global --add safe.directory "${GITHUB_WORKSPACE}"
     - name: build
       run: |
         scripts/build.sh appimage
     - name: build AppImage
       uses: AppImageCrafters/build-appimage@v1.3
       with:
         recipe: .github/AppImageBuilder.yml
     - uses: actions/upload-artifact@v4
       name: upload artifacts to github
       with:
         name: AppImage
         path: '*.AppImage*'

  deploy-appimage:
    name: deploy AppImage
    runs-on: ubuntu-latest
    needs: build-appimage
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'linux-nvme/nvme-cli' }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: AppImage
          path: AppImage
      - name: FTP Deployer
        uses: sand4rt/ftp-deployer@v1.8
        with:
          sftp: true
          host: ${{ secrets.SFTP_SERVER }}
          port: 22
          username: ${{ secrets.SFTP_USERNAME }}
          password: ${{ secrets.SFTP_PASSWORD }}
          remote_folder: '/upload'
          local_folder: '.'
          cleanup: false
          include: '[ "*", "**/*" ]'
          exclude: '[".github/**", ".git/**", "*.env"]'
